// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model User {
  id        String    @id @default(uuid())
  name      String
  username  String    @unique
  point     Int       @default(10)
  winPoint  Int       @default(0)
  losePint  Int       @default(0)
  account   Account[]
  topup     Topup[]
  Bet       Bet[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Topup {
  id     String  @id @default(uuid())
  point  Int
  User   User?   @relation(fields: [userId], references: [id])
  userId String?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Bet {
  id             String @id @default(uuid())
  User           User   @relation(fields: [userId], references: [id])
  userId         String
  playerChoice   String
  computerChoice String
  point          Int
  winner         String

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}
